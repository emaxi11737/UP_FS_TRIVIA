{
	"info": {
		"_postman_id": "57448dcb-d9b4-4dff-b014-eaf1f5f10488",
		"name": "API TRIVIA",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23157154"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "create admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"userId\", pm.response.json().data.id);",
									"    pm.environment.set(\"userEmail\", pm.response.json().data.email);",
									"    pm.environment.set(\"userRoles\", pm.response.json().data.roles);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": 1234,\n    \"email\": \"admin@gmail.com\",\n    \"roles\": [\"admin\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"userId\", pm.response.json().data.id);",
									"    pm.environment.set(\"userEmail\", pm.response.json().data.email);",
									"    pm.environment.set(\"userRoles\", pm.response.json().data.roles);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"user\",\n    \"password\": 1234,\n    \"email\": \"user@gmail.com\",\n    \"roles\": [\"user\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "read",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"userId\", pm.response.json().data.id);",
									"    pm.environment.set(\"username\", pm.response.json().data.username);",
									"    pm.environment.set(\"userEmail\", pm.response.json().data.email);",
									"    pm.environment.set(\"userRoles\", pm.response.json().data.roles);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/users/{{userId}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"username\", pm.response.json().data.username);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"usernuevo\",\n    \"oldPassword\": \"1234\",\n    \"newPassword\": 1234\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/users/{{userId}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:3000/users/{{userId}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "auth",
			"item": [
				{
					"name": "signin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"accessToken\", pm.response.json().data.accessToken);",
									"    pm.environment.set(\"refreshToken\", pm.response.json().data.refreshToken);",
									"    pm.environment.set(\"expiresIn\", pm.response.json().data.expiresIn);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{userEmail}}\",\n    \"password\": 1234\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/auth/signin",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "refreshToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"accessToken\", pm.response.json().data.accessToken);",
									"    pm.environment.set(\"refreshToken\", pm.response.json().data.refreshToken);",
									"    pm.environment.set(\"expiresIn\", pm.response.json().data.expiresIn);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{refreshToken}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/auth/refresh/token",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"refresh",
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "games",
			"item": [
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"gameId\", pm.response.json().data.id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\"\n}\n   ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/games",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"games"
							]
						}
					},
					"response": []
				},
				{
					"name": "read",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"gameId\", pm.response.json().data.id);",
									"    pm.environment.set(\"gameScore\", pm.response.json().data.score);",
									"    pm.environment.set(\"gameLevel\", pm.response.json().data.level);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/games/{{gameId}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"games",
								"{{gameId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "ranking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/games/ranking",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"games",
								"ranking"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"gameScore\", pm.response.json().data.score);",
									"    pm.environment.set(\"gameLevel\", pm.response.json().data.level);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"score\": 10,\n    \"level\": 1    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/games/{{gameId}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"games",
								"{{gameId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "questionCategories",
			"item": [
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"questionCategoryId\", pm.response.json().data.id);",
									"    pm.environment.set(\"questionCategoryName\", pm.response.json().data.name);",
									"    pm.environment.set(\"questionCategoryDescription\", pm.response.json().data.description);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{    \n    \"name\": \"Categoría 1\",\n    \"description\": \"Esta es la descripción de la categoría 1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/questionCategories",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"questionCategories"
							]
						}
					},
					"response": []
				},
				{
					"name": "list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/questionCategories",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"questionCategories"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Nombre de categoría\",\n    \"description\": \"Descripción de categoría\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/questionCategories/{{questionCategoryId}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"questionCategories",
								"{{questionCategoryId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:3000/questionCategories/{{questionCategoryId}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"questionCategories",
								"{{questionCategoryId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "questions",
			"item": [
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"questionId\", pm.response.json().data.id);",
									"    pm.environment.set(\"questionName\", pm.response.json().data.name);",
									"    pm.environment.set(\"questionDescription\", pm.response.json().data.description);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Pregunta 1\",\n    \"description\": \"¿Es esta la pregunta 1?\",\n    \"questionCategoryId\": \"{{questionCategoryId}}\",\n    \"level\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/questions",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"questions"
							]
						}
					},
					"response": []
				},
				{
					"name": "list",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "localhost:3000/questions/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"questions",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"questionId\", pm.response.json().data.id);",
									"    pm.environment.set(\"questionName\", pm.response.json().data.name);",
									"    pm.environment.set(\"questionDescription\", pm.response.json().data.description);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"name\": \"Pregunta 1 Modificada\",\r\n        \"description\": \"¿Es esta la pregunta 1 Modificada?\",\r\n        \"questionCategoryId\": \"{{questionCategoryId}}\",\r\n        \"level\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/questions/{{questionId}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"questions",
								"{{questionId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:3000/questions/{{questionId}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"questions",
								"{{questionId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "random",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/questions/random?questionCategoriesId[]={{questionCategoryId}}&level=1",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"questions",
								"random"
							],
							"query": [
								{
									"key": "questionCategoriesId[]",
									"value": "{{questionCategoryId}}"
								},
								{
									"key": "level",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "answers",
			"item": [
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"answerId\", pm.response.json().data.id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"questionId\": \"{{questionId}}\",\n    \"description\": \"Respuesta 1\",\n    \"isRight\": true\n}   ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/answers",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"answers"
							]
						}
					},
					"response": []
				},
				{
					"name": "read",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"answerId\", pm.response.json().data.id);",
									"    pm.environment.set(\"answerQuestionId\", pm.response.json().data.questionId);",
									"    pm.environment.set(\"answerDescription\", pm.response.json().data.description);",
									"    pm.environment.set(\"answerIsRight\", pm.response.json().data.isRight);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/answers/{{answerId}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"answers",
								"{{answerId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"answerId\", pm.response.json().data.id);",
									"    pm.environment.set(\"answerQuestionId\", pm.response.json().data.questionId);",
									"    pm.environment.set(\"answerDescription\", pm.response.json().data.description);",
									"    pm.environment.set(\"answerIsRight\", pm.response.json().data.isRight);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:3000/answers/{{answerId}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"answers",
								"{{answerId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/answers?page=0&limit=10&questionId={{questionId}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"answers"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "questionId",
									"value": "{{questionId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"answerId\", pm.response.json().data.id);",
									"    pm.environment.set(\"answerQuestionId\", pm.response.json().data.questionId);",
									"    pm.environment.set(\"answerDescription\", pm.response.json().data.description);",
									"    pm.environment.set(\"answerIsRight\", pm.response.json().data.isRight);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"questionId\": \"631a4ab23e9aa24ed255e6dc\",\n    \"description\": \"Respuesta\",\n    \"isRight\": false    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/answers/{{answerId}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"answers",
								"{{answerId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "healthCheck",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3000",
					"host": [
						"localhost"
					],
					"port": "3000"
				}
			},
			"response": []
		}
	]
}